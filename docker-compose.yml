version: "3.8"

services:
  db:
    image: postgres:15
    restart: always
    container_name: nsl-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env.development
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - nsl-network
      - cloudflare-tunnel
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    container_name: nsl-redis
    env_file:
      - .env.development
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - nsl-network
      - cloudflare-tunnel

  app:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - .env.development
    depends_on:
      - db
    networks:
      - nsl-network
      - cloudflare-tunnel

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: always
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - nsl-network
      - cloudflare-tunnel

volumes:
  db_data:
  pgadmin-data:
networks:
  nsl-network:
    driver: bridge
  cloudflare-tunnel:
    external: true